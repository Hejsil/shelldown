#!/bin/sh

PROGRAM="$(basename "$0")"
usage() {
    echo "Usage: $(basename "$PROGRAM") [ -l LANG ] [ CODE ]..."
    echo 'Outputs a codeblock in SD_LANG. If no code was'
    echo 'passed as arguments to this command, it will read'
    echo 'the code from stdin.'
    echo ''
    echo '    -l    Specify the language the code is written in.'
    exit "$1"
}

LANG=''
while getopts 'l:h' OPT; do
    case "$OPT" in
        l) LANG="$OPTARG" ;;
        h) usage 0 ;;
        *) usage 1 ;;
    esac
done
shift $((OPTIND-1))

CODE="$*"
code_string() {
    # Use awk to append missing newline at the end
    # of our input
    [ -z "$CODE" ] && cat - | awk '{print}'
    [ -z "$CODE" ] || echo "$CODE"
}

htmlescape() {
    sed -e 's/&/\&amp;/g' \
        -e 's/</\&lt;/g' \
        -e 's/>/\&gt;/g' \
        -e 's/"/\&quot;/g' \
        -e "s/'/\&#39;/g"
}

[ -z "$SD_LANG" ] && SD_LANG='term'
case "$SD_LANG" in
    html)
        printf '<pre><code'
        [ -z "$LANG" ] || {
            printf ' class="language-'
            printf '%s' "$LANG" | htmlescape
            printf '"'
        }
        printf '>'
        code_string | htmlescape
        echo '</code></pre>'
        ;;
    md)
        printf '```%s\n'
        code_string
        printf '```\n\n' "$LANG" "$*"
        ;;
    term)
        code_string
        ;;
esac
